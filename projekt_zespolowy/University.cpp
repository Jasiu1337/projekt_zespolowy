//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : University.cpp
//  @ Date : 16.05.2024
//  @ Author : 
//
//


#include "University.h"

University::University(string name) {
    this->name=name;
}

Teacher* University::LoginTeacher(string login, string password) {
    Teacher* teacher=nullptr;
    for(int i=0;i<teachers.size();++i)
    {
        if(teachers[i]->getLogin()==login&&teachers[i]->getPassword()==password)
        {
            teacher=teachers[i];
        }
    }
    return teacher;
}

bool University::RegisterTeacher(string login, string password, string name, string surname, Department* department) {
    for(int i=0;i<teachers.size();++i)
    {
        if(teachers[i]->getLogin()==login)
        {
            return false;
        }
    }
    Teacher* teacher=new Teacher(login,password,name,surname,department);
    this->teachers.push_back(teacher);
    department->addTeacher(teacher);
    return true;
}

Student* University::LoginStudent(string login, string password) {
    Student* student=nullptr;
    for(int i=0;i<students.size();++i)
    {
        if(students[i]->getLogin()==login&&students[i]->getPassword()==password)
        {
            student=students[i];
            break;
        }
    }
    return student;
}

bool University::RegisterStudent(string login, string password, string name, string surname, Department* department) {
    for(int i=0;i<students.size();++i)
    {
        if(students[i]->getLogin()==login)
        {
            return false;
        }
    }
    Student* student=new Student(login,password,name,surname,department);
    this->students.push_back(student);
    return true;
}

vector<Department*> University::getDepartments() {
    return this->departments;
}

bool University::addDepartment(string name) {
    for(int i=0;i<departments.size();++i)
    {
        if(departments[i]->getName()==name)
        {
            return false;
        }
    }
    Department* department=new Department(name);
    departments.push_back(department);
    return true;
}

string University::getName() {
    return this->name;
}

vector<Student *> University::getStudents(){
    return this->students;
}

vector<Teacher *> University::getTeachers(){
    return teachers;
}

